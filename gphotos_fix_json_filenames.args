# Rename JSON files from 'img_1234.jpg(1).json' to 'img_1234(1).jpg.json'
#
# Options overview:             https://exiftool.org/exiftool_pod.html#Option-Overview
# Writing file/directory names: https://exiftool.org/filename.html

# Always use UTF8 charset
-charset
UTF8

# Skip minor errors and warnings
-ignoreMinorErrors

# Allow duplicate tag names to be extracted
-duplicates

# Extract values of unknown tags
-unknown

# And also extract unknown information from binary data blocks
-unknown2

# Show processed filenames
-v0

# Show progress on console and console title
-progress:ExifTool %p%%
-progress

# Match patterns like 'img_1234.jpg(1).json'
#
# Perl regex references:
# https://perldoc.perl.org/perlre
# https://perldoc.perl.org/perlop#Regexp-Quote-Like-Operators
#
# Online testers:
# https://ingram-braun.net/erga/online-regex-tester-perl-php-javascript/
# https://regex101.com/
-if
($FileName=~/([^.]+?)\.(\w+?)(\(\d+\)).json/)

# Rename file
-FileName<${FileName;s/^([^.]+?)\.(\w+?)(\(\d+\)).json$/$1$3\.$2.json/}

# Overwrite original files. If this option is not specified, ExifTool
# makes a copy of the original file with extension "_original" in the
# source directory. If you wish to copy the files instead of overwriting
# them, see example 5 at https://exiftool.org/filename.html about
# using the '-o' option.
-overwrite_original

# Recurse all subdirs
-r

# Process only JSON files
-ext
json